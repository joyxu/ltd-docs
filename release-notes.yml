highlights:
  - mcuboot version 0.9.0
  - increased mcuboot support in Zephyr device tree

summary: |
 This release includes mcuboot version 0.9.0, and a Zephyr snapshot
 from the 1.9 development cycle with improved mcuboot integration.
parts:
  - name: Genesis
    summary: |
      This release includes mcuboot version 0.9.0, the first released
      version of mcuboot.

      It also includes a Zephyr snapshot with support for declaring
      flash partitions needed by mcuboot in device tree, support for
      safely using the flash driver along with the Bluetooth radio,
      and many other fixes and improvements.
    projects:
      - name: MCUBoot
        manifest_project: mcuboot
        features:
          - heading: Updated trailer format
            summary: |
              The image trailer format was changed so that its size no
              longer varies depending on the Flash hardware in use.
              The imgtool.py script was updated to generate binaries
              in the new format.
          - heading: Improved testing
            summary: |
              Release tests for Zephyr and Mynewt builds of mcuboot
              were added.

              The simulator now has initial testing of RSA signature
              verification. In addition, it has been refactored so
              that fuzz testing the signature checking routines will
              be possible in future patches.
          - heading: Zephyr: flash partitions from DTS
            summary: |
              On many Zephyr targets, mcuboot now uses flash
              partitions from DTS, rather than hard-coding them for
              each board. This allows Zephyr applications chain-loaded
              by mcuboot to share this configuration.
          - heading: Zephyr: sample applications
            summary: |
              A pair of sample applications were added for Zephyr
              targets, along with documentation for building them and
              flashing them onto supported boards for chain-loading
              and swapping by mcuboot itself.
          - heading: RIOT: image chainloading
            summary: |
              Application images based on the RIOT RTOS can now be
              chain-loaded by mcuboot.
          - heading: Porting guide
            summary: |
              A porting guide was written for supporting a new
              operating system in mcuboot.
        bug_fixes:
          - heading: Improved image swapping
            summary: |
              The logic controlling image swapping has been greatly
              simplified; mcuboot now has improved error checking
              during boot, and will panic more often when errors are
              detected that signal images cannot be fully validated or
              swaps were not correctly performed.
          - heading: Use of incorrect image headers
            summary: |
              A bug which could cause mcuboot to use the wrong image
              headers at some points during loading has been fixed.
          - heading: Spurious reverts from imgtool.py images
            summary: |
              A bug where some images generated by imgtool.py could
              cause a spurious revert when written to slot 0 has been
              fixed.
          - heading: Incorrect flash write to slot 0
            summary: |
              A bug where a failure to verify the image in slot 1
              could cause mcuboot to incorrectly write to flash for
              slot 0 has been fixed.
          - heading: ECDSA key generation fixes
            summary: |
              Two imgtool bugs affecting ECDSA key generation have
              been fixed.
      - name: Zephyr
        manifest_project: zephyr
        features:
          - heading: ADC for mcux
            summary: |
              An ADC driver for mcux devices was merged, and support
              for it was enabled for several boards.
          - heading: Boards
            summary: |
              Board support was added for the VBLUno52 and VBLUno51,
              based on nRF5 SoCs, and STM32F3DISCOVERY.
          - heading: Bluetooth Mesh
            summary: |
              An initial implementation of the newly-release Bluetooth
              Mesh specification was merged, with samples for some
              nRF52-based boards.
          - heading: Device tree
            summary: |
              The push to improve device tree usage
              continues. Formerly Kconfig-based configuration for I2C
              drivers was moved to DT, with uses in mcux and stm32
              drivers. The Bluetooth UART configuration also now is
              generated from DT. On STM32 targets, there is now an rcc
              node, and the DTSIs have been refactored to reflect
              inheritance among SoCs. The UART device which has the
              console attached is now available from DT on supported
              targets. Other DT improvements were merged as well.
          - heading: Device drivers for STM32
            summary: |
              Various device drivers were added for STM32 targets.

              A HAL-based Ethernet peripheral driver, I2C, SPI, and
              RNG (random number generator).
          - heading: Device drivers for NXP KW40Z
            summary: |
              IEEE 802.15.4 support was added for NXP KW40Z targets.
          - heading: Flash partitions added
            summary: |
              Flash partition support needed by mcuboot was added for
              more boards (96b_carbon, 96b_nitrogen, disco_l475_iot1,
              nrf52840_pca10056, and nucleo_f401re).
          - heading: Flash and Bluetooth driver safety for nRF
            summary: |
              Support for safe simultaneous usage of the Flash and
              Bluetooth drivers on nRF devices was merged.
          - heading: OpenSDA support for NXP boards
            summary: |
              Several NXP boards now select flash and debugging
              scripts based on the OpenSDA debug adapter provided by
              the SoC vendor.
          - heading: Socket poll()
            summary: |
              The BSD-like sockets API received support for the poll()
              I/O multiplexing operation.
          - heading: Python, and pip, version 3
            summary: |
              All dependencies for support scripts are now recommended
              to be installed using pip3.
          - heading: pyelftools dependency
            summary: |
              Zephyr now depends on the pyelftools package to build
              images.
          - heading: Memory management and protection
            summary: |
              Various improvements to how Zephyr manages and protects
              memory have been made.

              The application and kernel memory areas are now placed
              into different linker sections. This will enable memory
              protection of the kernel from the application.

              MMU support on QEMU for x86 is enabled by default.

              Generic support was added for marking variable
              declarations as belonging to kernel memory, along with
              architecture-specific support for x86.

              Stack guard pages have been added for x86 targets.
          - heading: TCP backlog
            summary: |
              A global TCP backlog for multiple incoming connections
              on the same port was added, along with the usual number
              of networking fixes and improvements. A number of
              Bluetooth fixes were merged as well.
        bug_fixes:
          - heading: Self-test suite improvements
            summary: |
              Various improvements and fixes were merged to the Zephyr
              self-test suite, as efforts continue to unify test
              project configuration files and better apply filtering
              when selecting tests to run.
          - heading: Bluetooth fixes
            summary: |
              A variety of important Bluetooth fixes were merged, which
              fix bugs and increase conformance with the Bluetooth standard.
      - name: Zephyr Fota Samples
        manifest_project: zephyr-fota-samples
        features:
          - heading: Device management with hawkBit
            summary: |
              This is a sample application which supports firmware
              over the air (FOTA) update using the hawkBit device
              management server protocol.
